# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
 
# trigger:
#   none
 
# pool:
#   name: "poolcapstone"
 
# stages:
#   # Stage 1: Git Clone
#   - stage: GitClone
#     displayName: "Clone Repository"
#     jobs:
#       - job: CloneJob
#         displayName: "Clone Git Repository"
#         steps:
#           - checkout: self
#             displayName: "Checkout Source Code"

#   # Stage 2: Run Ansible Playbook to Install Terraform
#   - stage: RunAnsiblePlaybook 
#     displayName: "Run Ansible Playbook to Install"
#     dependsOn: GitClone
#     jobs:
#       - job: InstallTerraform
#         displayName: "Install Terraform"
#         steps:
#           - script: |
#               echo "Running Ansible playbook to install Terraform..."
#               ansible-playbook ./install-terraform.yaml  # This is the playbook you want to run
#             displayName: "Run install-terraform.yaml Playbook"


trigger:
  none  # Manual trigger

pool:
  name: "poolcapstone"

stages:
  # Stage 1: Clone Repository
  - stage: CloneRepo
    displayName: "Clone Repository"
    jobs:
      - job: CloneJob
        displayName: "Clone Git Repository"
        steps:
          - checkout: self
            displayName: "Checkout Repository"

  # Stage 2: Azure CLI Login
  - stage: AzureLogin
    displayName: "Login to Azure"
    dependsOn: CloneRepo
    jobs:
      - job: AzureLoginJob
        displayName: "Authenticate with Azure"
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: "connectionsaunak"  # Replace with your service connection name
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Setting Azure Subscription..."
                az account set --subscription f027d2e5-7ece-41c4-8a19-54dfa1d3491d
            displayName: "Azure CLI Login"

  # Stage 3: Terraform Deploy
  - stage: TerraformDeploy
    displayName: "Deploy Infrastructure with Terraform"
    dependsOn: AzureLogin
    jobs:
      - job: TerraformJob
        displayName: "Run Terraform Commands"
        steps:
          # Initialize Terraform
          - script: |
              terraform init -backend-config="resource_group_name=RG-saunak" \
                             -backend-config="storage_account_name=saunak021224" \
                             -backend-config="container_name=container-saunak" \
                             -backend-config="key=terraform2.tfstate"
            displayName: "Initialize Terraform"

          # Terraform Plan
          - script: |
              terraform plan -out=tfplan
            displayName: "Terraform Plan"

          # Terraform Apply
          - script: |
              terraform apply -auto-approve tfplan
            displayName: "Apply Terraform Plan"
