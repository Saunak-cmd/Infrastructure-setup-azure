---
- name: Install Maven and Other Dependencies
  hosts: server
  become: true
  tasks:
    - name: Install Maven
      dnf:
        name: maven
        state: present

    # Remove conflicting podman and podman-docker packages
    - name: Remove Podman and Podman-Docker to Avoid Docker Conflict
      dnf:
        name:
          - podman-docker
          - podman
        state: absent
      ignore_errors: yes  # To avoid failures if Podman is not installed

    - name: Download the Latest kubectl Binary
      shell: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      args:
        creates: /usr/local/bin/kubectl

    - name: Download the Latest kubectl SHA256 Checksum
      shell: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
      args:
        creates: kubectl.sha256

    - name: Verify the SHA256 Checksum
      shell: |
        echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
      register: checksum_result
      failed_when: "'OK' not in checksum_result.stdout"

    - name: Install kubectl
      shell: |
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        export PATH=$PATH:/usr/local/bin
      args:
        creates: /usr/local/bin/kubectl

    - name: Verify kubectl Installation
      shell: |
        export PATH=$PATH:/usr/local/bin
        kubectl version --client
      register: kubectl_version_output

    - debug:
        var: kubectl_version_output.stdout

    # Add Docker repository
    - name: Add Docker Repository
      command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

    # Install Docker packages
    - name: Install Docker Packages
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: Start Docker Service
      systemd:
        name: docker
        state: started

    - name: Enable Docker Service
      systemd:
        name: docker
        enabled: true

    - name: Check Docker Service Status
      command: systemctl status docker
      register: docker_status
      ignore_errors: yes

    # Install JDK 17
    - name: Install JDK 17
      dnf:
        name: java-17-openjdk
        state: present

    - name: Verify JDK Installation
      shell: java -version
      register: java_version_output
      changed_when: false

    - debug:
        var: java_version_output.stdout

    # Import Microsoft GPG key
    - name: Import Microsoft GPG Key
      rpm_key:
        state: present
        key: https://packages.microsoft.com/keys/microsoft.asc

    # Install Microsoft repository for Azure CLI
    - name: Install Microsoft Repository for Azure CLI
      dnf:
        name: https://packages.microsoft.com/config/rhel/9.0/packages-microsoft-prod.rpm
        state: present

    # Install Azure CLI
    - name: Install Azure CLI
      dnf:
        name: azure-cli
        state: present

    - name: Verify Azure CLI Installation
      shell: az --version
      register: azure_cli_version_output
      changed_when: false

    - debug:
        var: azure_cli_version_output.stdout

---
- name: Install Terraform
  hosts: server
  become: true
  tasks:
    - name: Install yum-utils
      yum:
        name: yum-utils
        state: present

    - name: Add HashiCorp Repository
      command: >
        yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
      args:
        creates: /etc/yum.repos.d/hashicorp.repo  # Ensures idempotency by checking if the repo file exists

    - name: Install Terraform
      yum:
        name: terraform
        state: present

    - name: Verify Terraform Installation
      command: terraform --version
      register: terraform_version_output
      ignore_errors: no

    - name: Display Terraform Version
      debug:
        msg: "Installed Terraform version: {{ terraform_version_output.stdout }}"
